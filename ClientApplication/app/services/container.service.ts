import { Injectable } from '@angular/core';
import {ContainersClient, Container} from "./../autogenerated"
import 'rxjs/add/operator/toPromise';

@Injectable()
export class ContainerService {
    constructor(private client: ContainersClient) {

    }

    getContainers(): Promise<Container[]> {
        return this.client.get()
            .toPromise()
            .then(
                response => {
                    var result = response.data as Container[];
                    return result
                }
            )
            .catch(this.handleError);
    }

    getContainer(id: number): Promise<Container> {
        return this.getContainers()
            .then(
                containers => {
                    var result = new Container(containers.filter(container => container.id === id)[0]);
                    return result;
                }
            );
    }

    // Add new Container
    private post(container: Container): Promise<Container> {
        return this.client.post(container)
            .toPromise()
            .then((res: any) => new Container(res.data))
            .catch(this.handleError);

    }

    // Update existing Container
    private put(container: Container) {
        return this.client
            .put(container.id, container)
            .toPromise()
            .then(() => container as Container)
            .catch(this.handleError);
    }

    delete(container: Container) {
        return this.client
            .delete(container.id)
            .toPromise()
            .catch(this.handleError);
    }

    save(container: Container): Promise<Container> {
        if (container.id) {
            return this.put(container);
        }
        return this.post(container);
    }

    private handleError(error: any) {
        console.error('An error occurred', error);
        return Promise.reject(error.message || error);
    }
}